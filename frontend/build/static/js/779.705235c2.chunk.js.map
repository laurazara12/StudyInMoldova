{"version":3,"file":"static/js/779.705235c2.chunk.js","mappings":"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","sources":["views/profile/profile-tabs/application-tab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './application-tab.css';\nimport { API_BASE_URL, getAuthHeaders } from '../../../config/api.config';\n\nconst ApplicationTab = () => {\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [showApplicationDetails, setShowApplicationDetails] = useState(false);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [programs, setPrograms] = useState([]);\n  const [userRole, setUserRole] = useState('user'); // 'user' or 'admin'\n  const [userDocuments, setUserDocuments] = useState([]); // List of user documents\n  const [newApplication, setNewApplication] = useState({\n    program_id: '',\n    motivation_letter: '',\n    selectedDocuments: [], // Documents selected from existing list\n    is_paid: false, // Payment status\n    errors: {\n      program: '',\n      documents: '',\n      motivation_letter: '',\n      payment: ''\n    }\n  });\n  const [savedPrograms, setSavedPrograms] = useState([]);\n\n  useEffect(() => {\n    loadUserApplications();\n    loadPrograms();\n    checkUserRole();\n    loadUserDocuments();\n    loadSavedPrograms(); // Add loading of saved programs\n  }, []);\n\n  const checkUserRole = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/user/role`, {\n        headers: getAuthHeaders()\n      });\n      if (response.data.role === 'admin') {\n        setUserRole('admin');\n      }\n    } catch (error) {\n      console.error('Error checking role:', error);\n    }\n  };\n\n  const loadPrograms = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/programs`, {\n        headers: getAuthHeaders()\n      });\n      if (response.data.success) {\n        setPrograms(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error loading programs:', error);\n    }\n  };\n\n  const loadUserApplications = async () => {\n    try {\n      setLoading(true);\n      const endpoint = userRole === 'admin' \n        ? `${API_BASE_URL}/api/applications` \n        : `${API_BASE_URL}/api/applications/user`;\n\n      const response = await axios.get(endpoint, {\n        headers: getAuthHeaders()\n      });\n\n      if (!response.data || !response.data.success) {\n        throw new Error('No valid data received from server');\n      }\n\n      const applicationsData = response.data.data;\n      \n      if (!Array.isArray(applicationsData)) {\n        console.error('Invalid data received:', applicationsData);\n        throw new Error('Invalid data format: data is not an array');\n      }\n\n      // Ensure each application has all required fields\n      const processedApplications = applicationsData.map(app => ({\n        ...app,\n        documents: app.documents || [],\n        program: app.program || {},\n        created_at: app.created_at || new Date().toISOString(),\n        status: app.status || 'draft',\n        is_paid: app.payment_status === 'paid' || app.is_paid || false,\n        payment_status: app.payment_status || 'unpaid',\n        payment_date: app.payment_date || null,\n        payment_amount: app.payment_amount || null,\n        payment_currency: app.payment_currency || null\n      }));\n\n      console.log('Processed applications:', processedApplications);\n      setApplications(processedApplications);\n    } catch (error) {\n      console.error('Error loading applications:', error);\n      setError('An error occurred while loading applications. Please try again.');\n      setApplications([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadUserDocuments = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/documents/user-documents`, {\n        headers: getAuthHeaders()\n      });\n      if (response.data.success) {\n        setUserDocuments(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error loading documents:', error);\n    }\n  };\n\n  const loadSavedPrograms = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/saved-programs`, {\n        headers: getAuthHeaders()\n      });\n      if (response.data.success) {\n        setSavedPrograms(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error loading saved programs:', error);\n    }\n  };\n\n  const validateApplication = () => {\n    const errors = {\n      program: '',\n      documents: '',\n      motivation_letter: '',\n      payment: ''\n    };\n    let isValid = true;\n\n    if (newApplication.program_id && !newApplication.program_id) {\n      errors.program = 'Selected program is not valid';\n      isValid = false;\n    }\n\n    if (newApplication.motivation_letter && !newApplication.motivation_letter.trim()) {\n      errors.motivation_letter = 'Motivation letter cannot be empty';\n      isValid = false;\n    }\n\n    setNewApplication(prev => ({\n      ...prev,\n      errors\n    }));\n\n    return isValid;\n  };\n\n  const validateForSubmission = (application) => {\n    if (!application.is_paid) {\n      setError('You need to pay the application fee to submit the application');\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmitApplication = async (applicationId) => {\n    console.log('Starting submission for application:', applicationId);\n    const application = applications.find(app => app.id === applicationId);\n    \n    if (!application) {\n      console.error('Application not found:', applicationId);\n      setError('Application not found');\n      return;\n    }\n\n    console.log('Found application:', application);\n\n    if (!application.is_paid) {\n      console.error('Application not paid:', application);\n      setError('You cannot submit the application without paying the application fee. Please make the payment first.');\n      return;\n    }\n\n    if (!application.program_id || !application.motivation_letter || !application.documents || application.documents.length === 0) {\n      console.error('Missing required fields:', {\n        program_id: application.program_id,\n        has_motivation_letter: !!application.motivation_letter,\n        documents_count: application.documents?.length\n      });\n      setError('Please make sure all required fields are filled and documents are attached before submitting.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log('Sending submission request to:', `${API_BASE_URL}/api/applications/${applicationId}/status`);\n      \n      const response = await axios.put(\n        `${API_BASE_URL}/api/applications/${applicationId}/status`,\n        {\n          status: 'submitted',\n          notes: 'Application submitted by user'\n        },\n        {\n          headers: {\n            ...getAuthHeaders(),\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Submission response:', response.data);\n\n      if (response.data.success) {\n        setSuccessMessage('Application submitted successfully!');\n        setShowApplicationDetails(false);\n        setShowCreateForm(false); // Close the create/edit form modal\n        setSelectedApplication(null);\n        await loadUserApplications();\n      } else {\n        throw new Error(response.data.message || 'Error submitting application');\n      }\n    } catch (error) {\n      console.error('Error submitting application:', error);\n      setError(error.response?.data?.message || 'An error occurred while submitting the application');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditApplication = async (application) => {\n    try {\n      console.log('Starting application edit:', application);\n      setLoading(true);\n      setError(null);\n\n      const response = await axios.get(\n        `${API_BASE_URL}/api/applications/${application.id}`,\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      console.log('Server response:', response.data);\n\n      if (response.data.success) {\n        const fullApplication = response.data.data;\n        console.log('Loaded application data:', fullApplication);\n        \n        setSelectedApplication(fullApplication);\n        \n        const formData = {\n          program_id: fullApplication.program_id,\n          motivation_letter: fullApplication.motivation_letter || '',\n          selectedDocuments: fullApplication.documents?.map(doc => doc.id) || [],\n          is_paid: fullApplication.is_paid || false,\n          errors: {\n            program: '',\n            documents: '',\n            motivation_letter: '',\n            payment: ''\n          }\n        };\n        \n        console.log('Form data:', formData);\n        setNewApplication(formData);\n        \n        setShowCreateForm(true);\n        setShowApplicationDetails(false);\n        \n        console.log('State after setting:', {\n          selectedApplication: fullApplication,\n          newApplication: formData,\n          showCreateForm: true\n        });\n      } else {\n        throw new Error('Could not load application data');\n      }\n    } catch (error) {\n      console.error('Error loading application data:', error);\n      setError('An error occurred while loading application data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify useEffect to handle document selection\n  useEffect(() => {\n    if (showCreateForm && selectedApplication) {\n      console.log('Form opened with data:', {\n        selectedApplication,\n        newApplication\n      });\n\n      // Automatically select existing documents\n      if (selectedApplication.documents && selectedApplication.documents.length > 0) {\n        const documentIds = selectedApplication.documents.map(doc => doc.id);\n        console.log('Existing documents for selection:', documentIds);\n        \n        setNewApplication(prev => ({\n          ...prev,\n          selectedDocuments: documentIds\n        }));\n      }\n    }\n  }, [showCreateForm, selectedApplication]);\n\n  const handleCreateApplication = async (e) => {\n    e.preventDefault();\n    \n    if (!validateApplication()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const applicationData = {\n        program_id: newApplication.program_id ? parseInt(newApplication.program_id) : selectedApplication?.program_id,\n        motivation_letter: newApplication.motivation_letter || selectedApplication?.motivation_letter || '',\n        status: 'draft',\n        document_ids: newApplication.selectedDocuments.length > 0 \n          ? newApplication.selectedDocuments.map(id => parseInt(id))\n          : selectedApplication?.documents?.map(doc => parseInt(doc.id)) || [],\n        is_paid: selectedApplication?.is_paid || false\n      };\n\n      console.log('Data sent to server:', applicationData);\n\n      let response;\n      if (selectedApplication) {\n        response = await axios.put(\n          `${API_BASE_URL}/api/applications/${selectedApplication.id}/update`,\n          applicationData,\n          {\n            headers: {\n              ...getAuthHeaders(),\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n      } else {\n        response = await axios.post(\n          `${API_BASE_URL}/api/applications`,\n          applicationData,\n          {\n            headers: {\n              ...getAuthHeaders(),\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n      }\n\n      if (response.data.success) {\n        setSuccessMessage(selectedApplication ? 'Application updated successfully!' : 'Application created successfully!');\n        setShowCreateForm(false);\n        setNewApplication({\n          program_id: '',\n          motivation_letter: '',\n          selectedDocuments: [],\n          is_paid: false,\n          errors: {\n            program: '',\n            documents: '',\n            motivation_letter: '',\n            payment: ''\n          }\n        });\n        setSelectedApplication(null);\n        await loadUserApplications();\n      } else {\n        throw new Error(response.data.message || (selectedApplication ? 'Error updating application' : 'Error creating application'));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.response?.data?.message || (selectedApplication ? 'An error occurred while updating the application' : 'An error occurred while creating the application'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify the render part for documents\n  const renderDocumentsSection = () => (\n    <div className=\"form-group\">\n      <label>Required Documents: <span className=\"required\">*</span></label>\n      <p className=\"documents-help-text\">Please select the necessary documents for the selected program</p>\n      <div className=\"documents-selection\">\n        {!userDocuments || userDocuments.length === 0 ? (\n          <p className=\"no-documents\">You don't have any documents uploaded yet. Please upload documents in the profile section.</p>\n        ) : (\n          <div className=\"documents-list\">\n            {userDocuments.map((doc) => {\n              const isSelected = newApplication.selectedDocuments.includes(doc.id);\n              console.log(`Document ${doc.id} is selected:`, isSelected);\n              \n              return (\n                <>\n                <label className=\"document-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={isSelected}\n                  onChange={() => toggleDocumentSelection(doc.id)}\n                />\n                <span> </span>\n                <span className=\"document-name\">{doc.name || doc.document_type}</span>\n                </label>\n              \n                </>\n                );\n            })}\n          </div>\n          \n        )}\n        {newApplication.errors.documents && (\n          <span className=\"error-message\">{newApplication.errors.documents}</span>\n        )}\n      </div>\n    </div>\n  );\n\n  // Modify toggleDocumentSelection function to add logs\n  const toggleDocumentSelection = (docId) => {\n    console.log('Toggle document:', docId);\n    setNewApplication(prev => {\n      const isSelected = prev.selectedDocuments.includes(docId);\n      const newSelectedDocuments = isSelected\n        ? prev.selectedDocuments.filter(id => id !== docId)\n        : [...prev.selectedDocuments, docId];\n\n      console.log('Selected documents after toggle:', newSelectedDocuments);\n\n      return {\n        ...prev,\n        selectedDocuments: newSelectedDocuments,\n        errors: {\n          ...prev.errors,\n          documents: newSelectedDocuments.length === 0 ? 'Please select at least one document' : ''\n        }\n      };\n    });\n  };\n\n  const handleUpdateApplicationStatus = async (applicationId, newStatus, adminNotes = '') => {\n    try {\n      // Check if application ID is valid\n      if (!applicationId || isNaN(parseInt(applicationId))) {\n        throw new Error('Invalid application ID');\n      }\n\n      setLoading(true);\n      setError(null);\n\n      console.log('Starting status update:', {\n        applicationId,\n        newStatus,\n        adminNotes\n      });\n\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/applications/${applicationId}/status`,\n        {\n          status: newStatus,\n          notes: adminNotes\n        },\n        {\n          headers: {\n            ...getAuthHeaders(),\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Server response:', response.data);\n\n      if (response.data && response.data.success) {\n        setSuccessMessage('Application status updated successfully!');\n        setShowApplicationDetails(false);\n        setSelectedApplication(null);\n        await loadUserApplications();\n      } else {\n        throw new Error(response.data?.message || 'Error updating status');\n      }\n    } catch (error) {\n      console.error('Error updating status:', error);\n      \n      // Check error type and display specific message\n      if (error.response) {\n        if (error.response.status === 404) {\n          setError('Application not found. Please refresh the page.');\n        } else if (error.response.status === 403) {\n          setError('You do not have permission to update this application.');\n        } else {\n          setError(error.response.data?.message || 'An error occurred while updating the application status.');\n        }\n      } else if (error.request) {\n        setError('Could not communicate with the server. Please check your internet connection.');\n      } else {\n        setError(error.message || 'An unexpected error occurred.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    setNewApplication(prev => ({\n      ...prev,\n      documents: [...prev.documents, ...files],\n      errors: {\n        ...prev.errors,\n        documents: files.length > 0 ? '' : 'Please upload at least one document'\n      }\n    }));\n  };\n\n  const removeDocument = (index) => {\n    setNewApplication(prev => ({\n      ...prev,\n      documents: prev.documents.filter((_, i) => i !== index),\n      errors: {\n        ...prev.errors,\n        documents: prev.documents.length <= 1 ? 'Please upload at least one document' : ''\n      }\n    }));\n  };\n\n  const handleViewApplication = (application) => {\n    const fullApplication = {\n      ...application,\n      documents: application.documents || [],\n      program: application.program || {},\n      created_at: application.created_at || new Date().toISOString(),\n      status: application.status || 'draft',\n      is_paid: application.is_paid || false\n    };\n    setSelectedApplication(fullApplication);\n    setShowApplicationDetails(true);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'Invalid date';\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return 'Invalid date';\n    }\n  };\n\n  const getStatusLabel = (status) => {\n    if (!status) return 'Unknown';\n\n    switch (status) {\n      case 'draft':\n        return 'Draft';\n      case 'submitted':\n        return 'Submitted';\n      case 'under_review':\n        return 'Under Review';\n      case 'approved':\n        return 'Approved';\n      case 'rejected':\n        return 'Rejected';\n      case 'withdrawn':\n        return 'Withdrawn';\n      default:\n        return status.charAt(0).toUpperCase() + status.slice(1);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    if (!status) return 'status-unknown';\n\n    switch (status) {\n      case 'draft':\n        return 'status-draft';\n      case 'submitted':\n        return 'status-submitted';\n      case 'under_review':\n        return 'status-under-review';\n      case 'approved':\n        return 'status-approved';\n      case 'rejected':\n        return 'status-rejected';\n      case 'withdrawn':\n        return 'status-withdrawn';\n      default:\n        return 'status-unknown';\n    }\n  };\n\n  const canDeleteApplication = (application) => {\n    if (userRole === 'admin') return true;\n    return application.status === 'draft' && !application.submitted_at;\n  };\n\n  const handleDeleteApplication = async (applicationId) => {\n    const application = applications.find(app => app.id === applicationId);\n    \n    if (!canDeleteApplication(application)) {\n      setError('You cannot delete this application');\n      return;\n    }\n\n    if (!window.confirm('Are you sure you want to delete this application?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const deleteResponse = await axios.delete(\n        `${API_BASE_URL}/api/applications/${applicationId}`,\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (deleteResponse.data.success) {\n        setSuccessMessage('Application deleted successfully!');\n        setShowApplicationDetails(false);\n        setSelectedApplication(null);\n        await loadUserApplications();\n      } else {\n        throw new Error(deleteResponse.data.message || 'Error deleting application');\n      }\n    } catch (error) {\n      console.error('Error deleting application:', error);\n      if (error.response?.status === 404) {\n        setError('Application not found. It may have been already deleted.');\n      } else if (error.response?.status === 500) {\n        setError('This application cannot be deleted because it has associated records (documents, payments, etc.). Please withdraw the application instead.');\n      } else {\n        setError(error.response?.data?.message || 'An error occurred while deleting the application');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const canWithdrawApplication = (application) => {\n    if (userRole === 'admin') return false;\n    return ['submitted', 'under_review'].includes(application.status);\n  };\n\n  const handleWithdrawApplication = async (applicationId) => {\n    if (!window.confirm('Are you sure you want to withdraw this application?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await axios.put(\n        `${API_BASE_URL}/api/applications/${applicationId}/withdraw`,\n        {},\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (response.data.success) {\n        setSuccessMessage('Application withdrawn successfully!');\n        setShowApplicationDetails(false);\n        setSelectedApplication(null);\n        await loadUserApplications();\n      } else {\n        throw new Error(response.data.message || 'Error withdrawing application');\n      }\n    } catch (error) {\n      console.error('Error withdrawing application:', error);\n      setError(error.response?.data?.message || 'An error occurred while withdrawing the application');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const canSubmitApplication = (application) => {\n    if (userRole === 'admin') return false;\n    return application.status === 'draft' && application.is_paid;\n  };\n\n  const canEditApplication = (application) => {\n    if (userRole === 'admin') return false;\n    return application.status === 'draft';\n  };\n\n  const handlePayment = async (application) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Verificăm dacă avem aplicația selectată\n      if (!application) {\n        throw new Error('Selectează o aplicație înainte de a efectua plata');\n      }\n\n      // Verificăm dacă aplicația există și nu este deja plătită\n      if (application.is_paid) {\n        throw new Error('Această aplicație a fost deja plătită');\n      }\n\n      console.log('Încep procesul de plată pentru aplicația:', application.id);\n\n      // Găsim programul selectat din lista de programe\n      const selectedProgram = programs.find(p => p.id === application.program_id);\n      if (!selectedProgram) {\n        throw new Error('Programul selectat nu a fost găsit');\n      }\n\n      const paymentData = {\n        application_id: application.id,\n        program_id: application.program_id,\n        amount: selectedProgram.tuition_fees,\n        motivation_letter: application.motivation_letter || '',\n        document_ids: application.documents?.map(doc => doc.id) || []\n      };\n\n      console.log('Date plată:', paymentData);\n\n      const response = await axios.post(\n        `${API_BASE_URL}/api/payments/create-checkout-session`,\n        paymentData,\n        {\n          headers: {\n            ...getAuthHeaders(),\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Răspuns server pentru sesiunea de plată:', response.data);\n\n      if (!response.data) {\n        throw new Error('Nu s-a primit răspuns de la server');\n      }\n\n      if (!response.data.success) {\n        throw new Error(response.data.message || 'Eroare la crearea sesiunii de plată');\n      }\n\n      if (!response.data.url) {\n        throw new Error('Lipsește URL-ul de plată din răspunsul serverului');\n      }\n\n      // Salvăm sesiunea de plată și id-ul aplicației\n      localStorage.setItem('currentPaymentSession', response.data.session_id);\n      localStorage.setItem('paymentApplicationId', application.id);\n      \n      console.log('Redirecționare către pagina de plată:', response.data.url);\n      window.location.href = response.data.url;\n    } catch (error) {\n      console.error('Eroare la procesarea plății:', error);\n      setError(error.response?.data?.message || error.message || 'A apărut o eroare la procesarea plății');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify effect for processing payment platform response\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const paymentStatus = urlParams.get('payment');\n    \n    if (paymentStatus === 'success') {\n      const applicationId = localStorage.getItem('paymentApplicationId');\n      if (applicationId) {\n        const processPaymentSuccess = async () => {\n          try {\n            // Validate ID\n            if (!applicationId || isNaN(parseInt(applicationId))) {\n              throw new Error('Invalid application ID');\n            }\n\n            // Check current application status\n            const response = await axios.get(\n              `${API_BASE_URL}/api/applications/${applicationId}`,\n              {\n                headers: getAuthHeaders()\n              }\n            );\n\n            if (!response.data || !response.data.success) {\n              throw new Error('Could not verify application status');\n            }\n\n            const application = response.data.data;\n            \n            // Check if application is already paid\n            if (application.is_paid) {\n              setSuccessMessage('Payment has already been processed successfully!');\n            } else {\n              setSuccessMessage('Payment processed successfully!');\n            }\n\n            // Clear localStorage and URL\n            localStorage.removeItem('paymentApplicationId');\n            localStorage.removeItem('currentPaymentSession');\n            window.history.replaceState({}, document.title, window.location.pathname);\n            \n            // Reload applications to reflect new state\n            await loadUserApplications();\n            \n            // Close details modal if open\n            setShowApplicationDetails(false);\n            setSelectedApplication(null);\n\n          } catch (error) {\n            console.error('Error processing payment:', error);\n            setError('An error occurred while verifying payment status. Please contact support.');\n          }\n        };\n        \n        processPaymentSuccess();\n      }\n    } else if (paymentStatus === 'canceled') {\n      const applicationId = localStorage.getItem('paymentApplicationId');\n      if (applicationId) {\n        console.log('Payment canceled for application:', applicationId);\n        \n        // Clear localStorage and URL\n        localStorage.removeItem('paymentApplicationId');\n        localStorage.removeItem('currentPaymentSession');\n        window.history.replaceState({}, document.title, window.location.pathname);\n        \n        setError('Payment was canceled. You can try again.');\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"application-tab\">\n      <div className=\"application-section\">\n        <h2>{userRole === 'admin' ? 'All Applications' : 'My Applications'}</h2>\n        {userRole === 'user' && (\n          <button \n            className=\"btn1\"\n            onClick={() => setShowCreateForm(true)}\n            style={{ margin: '20px 0' }}\n          >\n            <i className=\"fas fa-plus\"></i> Create New Application\n          </button>\n        )}\n      </div>\n\n      {successMessage && (\n        <div className=\"alert-success\">\n          {successMessage}\n        </div>\n      )}\n\n      {error && (\n        <div className=\"alert-error\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"application-stats\">\n        <div className=\"application-stat\">\n          Drafts\n          <span className=\"stat-value status-draft\">{applications.filter(app => app.status === 'draft').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Submitted\n          <span className=\"stat-value status-submitted\">{applications.filter(app => app.status === 'submitted').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Under Review\n          <span className=\"stat-value status-under-review\">{applications.filter(app => app.status === 'under_review').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Approved\n          <span className=\"stat-value status-approved\">{applications.filter(app => app.status === 'approved').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Rejected\n          <span className=\"stat-value status-rejected\">{applications.filter(app => app.status === 'rejected').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Withdrawn\n          <span className=\"stat-value status-withdrawn\">{applications.filter(app => app.status === 'withdrawn').length}</span>\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading applications...</p>\n        </div>\n      ) : applications.length === 0 ? (\n        <div className=\"no-applications\">\n          <p>No applications found.</p>\n        </div>\n      ) : (\n        <div className=\"applications-table-container\">\n          <table className=\"profile-table\">\n            <thead>\n              <tr>\n                {userRole === 'admin' && <th>User</th>}\n                <th>Program</th>\n                <th>University</th>\n                <th>Application Date</th>\n                <th>Status</th>\n                <th>Payment</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {applications.map(app => (\n                <tr key={app.id}>\n                  {userRole === 'admin' && (\n                    <td>{app.user_name || `User ID: ${app.user_id}`}</td>\n                  )}\n                  <td>{app.program?.name || 'N/A'}</td>\n                  <td>{app.program?.university?.name || 'N/A'}</td>\n                  <td>{formatDate(app.created_at)}</td>\n                  <td>\n                    <span className={`status-badge ${getStatusColor(app.status)}`}>\n                      {getStatusLabel(app.status)}\n                    </span>\n                  </td>\n                  <td>\n                    <span className={`payment-status ${app.is_paid ? 'paid' : 'unpaid'}`}>\n                      {app.is_paid ? 'Paid' : 'Unpaid'}\n                    </span>\n                  </td>\n                  <td>\n                    <button \n                      className=\"btn2\"\n                      onClick={() => handleViewApplication(app)}\n                      style={{ marginRight: '10px' }}\n                    >\n                      <i className=\"fas fa-eye\"></i> View\n                    </button>\n                    {canEditApplication(app) && (\n                      <button \n                        className=\"btn1\"\n                        onClick={() => handleEditApplication(app)}\n                      >\n                        <i className=\"fas fa-edit\"></i> Edit\n                      </button>\n                    )}\n                    {canEditApplication(app) && !app.is_paid && (\n                      <button\n                        className=\"btn1\"\n                        style={{ marginLeft: '10px' }}\n                        onClick={() => handlePayment(app)}\n                      >\n                        <i className=\"fas fa-credit-card\"></i> Pay 100 MDL\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {showCreateForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>{selectedApplication ? 'Edit Application' : 'Create New Application'}</h2>\n            <form onSubmit={handleCreateApplication} className=\"application-form\">\n              <div className=\"form-group\">\n                <label>Program: <span className=\"required\">*</span></label>\n                <select\n                  value={newApplication.program_id || ''}\n                  onChange={(e) => {\n                    console.log('Selected program:', e.target.value);\n                    setNewApplication({\n                      ...newApplication,\n                      program_id: e.target.value,\n                      errors: {\n                        ...newApplication.errors,\n                        program: ''\n                      }\n                    });\n                  }}\n                  className={`form-select ${newApplication.errors.program ? 'error' : ''}`}\n                >\n                  <option value=\"\">Select a program</option>\n                  {savedPrograms.map(program => (\n                    <option key={program.id} value={program.id}>\n                      {program.name} - {program.university?.name}\n                    </option>\n                  ))}\n                </select>\n                {newApplication.errors.program && (\n                  <span className=\"error-message\">{newApplication.errors.program}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Motivation Letter: <span className=\"required\">*</span></label>\n                <textarea\n                  value={newApplication.motivation_letter || ''}\n                  onChange={(e) => {\n                    console.log('Updated motivation letter:', e.target.value);\n                    setNewApplication({\n                      ...newApplication,\n                      motivation_letter: e.target.value,\n                      errors: {\n                        ...newApplication.errors,\n                        motivation_letter: ''\n                      }\n                    });\n                  }}\n                  className={`form-textarea ${newApplication.errors.motivation_letter ? 'error' : ''}`}\n                  rows=\"6\"\n                  placeholder=\"Write your motivation letter...\"\n                />\n                {newApplication.errors.motivation_letter && (\n                  <span className=\"error-message\">{newApplication.errors.motivation_letter}</span>\n                )}\n              </div>\n\n              {renderDocumentsSection()}\n\n              <div className=\"form-info\">\n                <p><span className=\"required\">*</span> Required fields</p>\n              </div>\n\n              <div className=\"button-group\">\n                <button \n                  type=\"submit\" \n                  className=\"btn1\"\n                >\n                  {selectedApplication ? 'Update Application' : 'Save Application'}\n                </button>\n                {selectedApplication && selectedApplication.status === 'draft' && (\n                  <button\n                    type=\"button\"\n                    className=\"btn1\"\n                    onClick={() => {\n                      if (!selectedApplication.is_paid) {\n                        setError('You need to pay the application fee to submit the application');\n                        return;\n                      }\n                      handleSubmitApplication(selectedApplication.id);\n                    }}\n                    disabled={\n                      !selectedApplication.program_id || \n                      !selectedApplication.motivation_letter || \n                      !selectedApplication.documents || \n                      selectedApplication.documents.length === 0 ||\n                      !selectedApplication.is_paid ||\n                      loading\n                    }\n                  >\n                    <i className=\"fas fa-paper-plane\"></i> Submit Application\n                    {!selectedApplication.is_paid && (\n                      <span className=\"payment-required\">(Payment required)</span>\n                    )}\n                  </button>\n                )}\n              </div>\n            </form>\n            <button \n              className=\"close-button\"\n              onClick={() => {\n                setShowCreateForm(false);\n                setNewApplication({\n                  program_id: '',\n                  motivation_letter: '',\n                  selectedDocuments: [],\n                  is_paid: false,\n                  errors: {\n                    program: '',\n                    documents: '',\n                    motivation_letter: '',\n                    payment: ''\n                  }\n                });\n                setSelectedApplication(null);\n              }}\n            >\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showApplicationDetails && selectedApplication && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Application Details</h2>\n            <div className=\"application-details\">\n              {userRole === 'admin' && (\n                <p><strong>User:</strong> {selectedApplication.user_name || `ID: ${selectedApplication.user_id}`}</p>\n              )}\n              <p><strong>Program:</strong> {selectedApplication.program?.name || 'N/A'}</p>\n              <p><strong>University:</strong> {selectedApplication.program?.university?.name || 'N/A'}</p>\n              <p><strong>Application Date:</strong> {formatDate(selectedApplication.created_at)}</p>\n              <p><strong>Status:</strong> {getStatusLabel(selectedApplication.status)}</p>\n              <p>\n                <strong>Payment Status:</strong>\n                <span className={`payment-status ${selectedApplication.is_paid ? 'paid' : 'unpaid'}`}>\n                  {selectedApplication.is_paid ? 'Paid' : 'Unpaid'}\n                </span>\n              </p>\n              \n              <div className=\"motivation-letter-section\">\n                <h3>Motivation Letter</h3>\n                <div className=\"motivation-letter-content\">\n                  <p>{selectedApplication.motivation_letter || 'No motivation letter provided'}</p>\n                </div>\n              </div>\n\n              <div className=\"documents-section\">\n                <h3>Attached Documents</h3>\n                <div className=\"documents-list\">\n                  {selectedApplication.documents && selectedApplication.documents.length > 0 ? (\n                    selectedApplication.documents.map((doc, index) => (\n                      <div key={index} className=\"document-item\">\n                        <div className=\"document-info\">\n                          <span className=\"document-type\">\n                            <i className=\"fas fa-file-alt\"></i> {doc.document_type}\n                          </span>\n                          <span className=\"document-status\">\n                            <i className={`fas fa-circle ${doc.status === 'approved' ? 'status-approved' : doc.status === 'rejected' ? 'status-rejected' : 'status-pending'}`}></i>\n                            {doc.status === 'approved' ? 'Approved' : doc.status === 'rejected' ? 'Rejected' : 'Pending'}\n                          </span>\n                        </div>\n                        <div className=\"document-actions\">\n                          <a \n                            href={doc.url} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"btn2\"\n                          >\n                            <i className=\"fas fa-eye\"></i> View\n                          </a>\n                          <span className=\"document-name\">{doc.originalName || doc.filename}</span>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <p className=\"no-documents\">No documents attached</p>\n                  )}\n                </div>\n              </div>\n\n              {selectedApplication.notes && (\n                <div className=\"admin-notes\">\n                  <h3>Admin Notes</h3>\n                  <div className=\"notes-content\">\n                    <p>{selectedApplication.notes}</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"action-buttons\">\n                \n                \n                {canDeleteApplication(selectedApplication) && (\n                  <button\n                    className=\"btn2\"\n                    onClick={() => handleDeleteApplication(selectedApplication.id)}\n                  >\n                    <i className=\"fas fa-trash\"></i> Delete Application\n                  </button>\n                )}\n                \n                {canEditApplication(selectedApplication) && (\n                  <button\n                    className=\"btn1\"\n                    onClick={() => handleEditApplication(selectedApplication)}\n                  >\n                    <i className=\"fas fa-edit\"></i> Edit Application\n                  </button>\n                )}\n\n                {selectedApplication.status === 'draft' && (\n                  <button\n                    className=\"btn1\"\n                    onClick={() => {\n                      if (!selectedApplication.is_paid) {\n                        setError('You need to pay the application fee to submit the application');\n                        return;\n                      }\n                      handleSubmitApplication(selectedApplication.id);\n                    }}\n                    disabled={\n                      !selectedApplication.program_id || \n                      !selectedApplication.motivation_letter || \n                      !selectedApplication.documents || \n                      selectedApplication.documents.length === 0 ||\n                      !selectedApplication.is_paid ||\n                      loading\n                    }\n                  >\n                    <i className=\"fas fa-paper-plane\"></i> Submit Application\n                    {!selectedApplication.is_paid && (\n                      <span className=\"payment-required\">(Payment required)</span>\n                    )}\n                  </button>\n                )}\n                \n                {canWithdrawApplication(selectedApplication) && (\n                  <button\n                    className=\"btn2\"\n                    onClick={() => handleWithdrawApplication(selectedApplication.id)}\n                  >\n                    <i className=\"fas fa-undo\"></i> Withdraw Application\n                  </button>\n                )}\n              </div>\n\n              {userRole === 'admin' && selectedApplication.status === 'submitted' && (\n                <div className=\"admin-actions\">\n                  <h3>Admin Actions</h3>\n                  <div className=\"form-group\">\n                    <label>Notes:</label>\n                    <textarea\n                      className=\"form-textarea\"\n                      rows=\"4\"\n                      placeholder=\"Add notes for the applicant...\"\n                      value={selectedApplication.adminNotes || ''}\n                      onChange={(e) => setSelectedApplication({\n                        ...selectedApplication,\n                        adminNotes: e.target.value\n                      })}\n                    />\n                  </div>\n                  <div className=\"button-group\">\n                    <button\n                      className=\"btn1\"\n                      onClick={() => handleUpdateApplicationStatus(\n                        selectedApplication.id,\n                        'approved',\n                        selectedApplication.adminNotes\n                      )}\n                    >\n                      Approve\n                    </button>\n                    <button\n                      className=\"btn2\"\n                      onClick={() => handleUpdateApplicationStatus(\n                        selectedApplication.id,\n                        'rejected',\n                        selectedApplication.adminNotes\n                      )}\n                    >\n                      Reject\n                    </button>\n                    <button\n                      className=\"btn2\"\n                      onClick={() => handleUpdateApplicationStatus(\n                        selectedApplication.id,\n                        'under_review',\n                        selectedApplication.adminNotes\n                      )}\n                    >\n                      Put Under Review\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n            <button \n              className=\"close-button\"\n              onClick={() => {\n                setShowApplicationDetails(false);\n                setSelectedApplication(null);\n              }}\n            >\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationTab; "],"names":["ApplicationTab","_selectedApplication$2","_selectedApplication$3","_selectedApplication$4","applications","setApplications","useState","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedApplication","setSelectedApplication","showApplicationDetails","setShowApplicationDetails","showCreateForm","setShowCreateForm","programs","setPrograms","userRole","setUserRole","userDocuments","setUserDocuments","newApplication","setNewApplication","program_id","motivation_letter","selectedDocuments","is_paid","errors","program","documents","payment","savedPrograms","setSavedPrograms","useEffect","loadUserApplications","loadPrograms","checkUserRole","loadUserDocuments","loadSavedPrograms","async","axios","get","API_BASE_URL","headers","getAuthHeaders","data","role","console","response","success","endpoint","Error","applicationsData","Array","isArray","processedApplications","map","app","created_at","Date","toISOString","status","payment_status","payment_date","payment_amount","payment_currency","log","handleSubmitApplication","applicationId","application","find","id","_application$document","length","has_motivation_letter","documents_count","put","notes","message","_error$response","_error$response$data","handleEditApplication","_fullApplication$docu","fullApplication","formData","doc","documentIds","prev","toggleDocumentSelection","docId","newSelectedDocuments","includes","filter","handleUpdateApplicationStatus","newStatus","adminNotes","arguments","undefined","isNaN","parseInt","patch","_response$data","_error$response$data2","request","formatDate","dateString","date","getTime","toLocaleDateString","year","month","day","hour","minute","getStatusLabel","charAt","toUpperCase","slice","getStatusColor","canDeleteApplication","submitted_at","canEditApplication","paymentStatus","URLSearchParams","window","location","search","localStorage","getItem","processPaymentSuccess","removeItem","history","replaceState","document","title","pathname","_jsxs","className","children","_jsx","onClick","style","margin","_app$program","_app$program2","_app$program2$univers","user_name","user_id","name","university","handleViewApplication","marginRight","marginLeft","_application$document2","selectedProgram","p","paymentData","application_id","amount","tuition_fees","document_ids","post","url","setItem","session_id","href","_error$response7","_error$response7$data","handlePayment","onSubmit","e","preventDefault","validateApplication","isValid","trim","_selectedApplication$","applicationData","_error$response2","_error$response2$data","value","onChange","target","_program$university","rows","placeholder","isSelected","_Fragment","type","checked","document_type","disabled","index","rel","originalName","filename","confirm","deleteResponse","delete","_error$response3","_error$response4","_error$response5","_error$response5$data","handleDeleteApplication","_error$response6","_error$response6$data","handleWithdrawApplication"],"sourceRoot":""}