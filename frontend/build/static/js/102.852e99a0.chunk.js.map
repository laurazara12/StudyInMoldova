{"version":3,"file":"static/js/102.852e99a0.chunk.js","mappings":"gMAKA,MAkGA,EAlGyBA,IAAmB,IAAlB,SAAEC,GAAUD,EACpC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,QAErCO,EAAAA,EAAAA,YAAU,KACRC,GAAoB,GACnB,IAEH,MAAMA,EAAqBC,UACzB,IAAK,IAADC,EACFR,GAAW,GACXE,EAAS,MAET,MAAMO,QAAiBC,EAAAA,EAAMC,IAAI,GAAGC,EAAAA,uBAAkC,CACpEC,SAASC,EAAAA,EAAAA,QAGX,GAAiB,QAAjBN,EAAIC,EAASM,YAAI,IAAAP,IAAbA,EAAeQ,QAGjB,MAAM,IAAIC,MAAM,qCAFhBpB,EAAiBY,EAASM,KAAKA,KAInC,CAAE,MAAOd,GACPiB,QAAQjB,MAAM,+CAAsCA,GACpDC,GAASiB,EAAAA,EAAAA,IAAelB,GAC1B,CAAC,QACCD,GAAW,EACb,GAGIoB,EAAmC,QAAXjB,EAC1BP,EACAA,EAAcO,QAAOkB,IAAiBA,EAAaC,OAEvD,OAAIvB,GAEAwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,SAAC,8CAK3BxB,GAEAsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAExB,OAMpCyB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,UACEC,UAAW,kBAA4B,QAAXrB,EAAmB,SAAW,IAC1DwB,QAASA,IAAMvB,EAAU,OAAOqB,SACjC,WAGDF,EAAAA,EAAAA,KAAA,UACEC,UAAW,kBAA4B,WAAXrB,EAAsB,SAAW,IAC7DwB,QAASA,IAAMvB,EAAU,UAAUqB,SACpC,mBAM6B,IAAjCL,EAAsBQ,QACrBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAC,oCAIlCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAChCL,EAAsBS,KAAKR,IAC1BE,EAAAA,EAAAA,KAAA,OAEEC,UAAW,sBAAsBH,EAAaC,KAAkB,GAAX,UAAgBG,UAErEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKJ,EAAaS,SAClBP,EAAAA,EAAAA,KAAA,KAAAE,SAAIJ,EAAaU,WACjBR,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAChC,IAAIO,KAAKX,EAAaY,YAAYC,mBAAmB,eAPrDb,EAAac,UActB,C","sources":["views/profile/profile-tabs/notifications-tab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE_URL, getAuthHeaders, handleApiError } from '../../../config/api.config';\nimport axios from 'axios';\nimport '../profile.css';\n\nconst NotificationsTab = ({ userData }) => {\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all'); // 'all' sau 'unread'\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await axios.get(`${API_BASE_URL}/api/notifications`, {\n        headers: getAuthHeaders()\n      });\n\n      if (response.data?.success) {\n        setNotifications(response.data.data);\n      } else {\n        throw new Error('Răspuns invalid de la server');\n      }\n    } catch (error) {\n      console.error('Eroare la obținerea notificărilor:', error);\n      setError(handleApiError(error));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredNotifications = filter === 'all' \n    ? notifications \n    : notifications.filter(notification => !notification.read);\n\n  if (loading) {\n    return (\n      <div className=\"notifications-container\">\n        <div className=\"loading\">Se încarcă notificările...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"notifications-container\">\n        <div className=\"error-message\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"notifications-container\">\n      <div className=\"notifications-header\">\n        <h3>Notificări</h3>\n        <div className=\"notifications-filters\">\n          <button \n            className={`filter-button ${filter === 'all' ? 'active' : ''}`}\n            onClick={() => setFilter('all')}\n          >\n            Toate\n          </button>\n          <button \n            className={`filter-button ${filter === 'unread' ? 'active' : ''}`}\n            onClick={() => setFilter('unread')}\n          >\n            Necitite\n          </button>\n        </div>\n      </div>\n\n      {filteredNotifications.length === 0 ? (\n        <div className=\"no-notifications\">\n          Nu există notificări\n        </div>\n      ) : (\n        <div className=\"notifications-list\">\n          {filteredNotifications.map((notification) => (\n            <div \n              key={notification.id} \n              className={`notification-item ${!notification.read ? 'unread' : ''}`}\n            >\n              <div className=\"notification-content\">\n                <h4>{notification.title}</h4>\n                <p>{notification.message}</p>\n                <span className=\"notification-date\">\n                  {new Date(notification.created_at).toLocaleDateString('ro-RO')}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotificationsTab; "],"names":["_ref","userData","notifications","setNotifications","useState","loading","setLoading","error","setError","filter","setFilter","useEffect","fetchNotifications","async","_response$data","response","axios","get","API_BASE_URL","headers","getAuthHeaders","data","success","Error","console","handleApiError","filteredNotifications","notification","read","_jsx","className","children","_jsxs","onClick","length","map","title","message","Date","created_at","toLocaleDateString","id"],"sourceRoot":""}