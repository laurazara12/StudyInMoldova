{"version":3,"file":"static/js/900.00e36a50.chunk.js","mappings":"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","sources":["views/profile/profile-tabs/saved-programs-tab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE_URL, getAuthHeaders, handleApiError } from '../../../config/api.config';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './saved-programs-tab.css';\n\nconst SavedProgramsTab = ({ userData }) => {\n  const navigate = useNavigate();\n  const [savedPrograms, setSavedPrograms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [programToDelete, setProgramToDelete] = useState(null);\n\n  useEffect(() => {\n    if (userData) {\n      fetchSavedPrograms();\n    }\n  }, [userData]);\n\n  const fetchSavedPrograms = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.get(`${API_BASE_URL}/api/saved-programs`, {\n        headers: getAuthHeaders()\n      });\n      \n      console.log('Răspuns programe salvate:', response.data);\n      \n      if (response.data?.data) {\n        setSavedPrograms(response.data.data);\n      } else {\n        setSavedPrograms([]);\n      }\n    } catch (error) {\n      console.error('Eroare la preluarea programelor salvate:', error);\n      \n      if (error.response?.status === 401) {\n        navigate('/sign-in');\n        return;\n      }\n      setError(handleApiError(error).message);\n      setSavedPrograms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveSavedProgram = async (programId) => {\n    setProgramToDelete(programId);\n    setShowDeleteConfirmation(true);\n  };\n\n  const confirmDeleteProgram = async () => {\n    if (!programToDelete) return;\n\n    try {\n      const response = await axios.delete(\n        `${API_BASE_URL}/api/saved-programs/${programToDelete}`,\n        { headers: getAuthHeaders() }\n      );\n\n      if (response.data.success) {\n        setSavedPrograms(prev => prev.filter(p => p.id !== programToDelete));\n        setNotification({\n          type: 'success',\n          message: 'Programul a fost eliminat cu succes!'\n        });\n      }\n    } catch (error) {\n      console.error('Eroare la eliminarea programului:', error);\n      setError('A apărut o eroare la eliminarea programului. Vă rugăm să încercați din nou.');\n    } finally {\n      setShowDeleteConfirmation(false);\n      setProgramToDelete(null);\n    }\n  };\n\n  const cancelDeleteProgram = () => {\n    setShowDeleteConfirmation(false);\n    setProgramToDelete(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"saved-programs-section\">\n        <div className=\"loading\">Se încarcă programele salvate...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"saved-programs-section\">\n        <div className=\"error-message\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"saved-programs-section\">\n      <h2>Programe Salvate</h2>\n      {savedPrograms.length > 0 ? (\n        <div className=\"programs-grid\">\n          {savedPrograms.map((program) => (\n            <div key={program.id} className=\"program-card\">\n              <div className=\"program-header\">\n                <h3>{program.name || 'N/A'}</h3>\n                <button\n                  className=\"remove-button\"\n                  onClick={() => handleRemoveSavedProgram(program.id)}\n                >\n                  Elimină\n                </button>\n              </div>\n              <div className=\"program-details\">\n                <p><strong>Universitate:</strong> {program.university?.name || 'N/A'}</p>\n                <p><strong>Facultate:</strong> {program.faculty || 'N/A'}</p>\n                <p><strong>Grad:</strong> {program.degree_type || program.degree || 'N/A'}</p>\n                <p><strong>Credite:</strong> {program.credits || 'N/A'}</p>\n                <p><strong>Limbă:</strong> {program.language || 'N/A'}</p>\n                <p><strong>Durată:</strong> {program.duration ? `${program.duration} ani` : 'N/A'}</p>\n                <p><strong>Taxă de școlarizare:</strong> {program.tuition_fees ? `${program.tuition_fees} EUR` : 'N/A'}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-programs-message\">\n          <p>Nu aveți programe salvate.</p>\n        </div>\n      )}\n\n      {showDeleteConfirmation && (\n        <div className=\"confirmation-modal\">\n          <div className=\"confirmation-content\">\n            <h3>Confirmare ștergere</h3>\n            <p>Ești sigur că vrei să elimini acest program din lista ta?</p>\n            <div className=\"confirmation-buttons\">\n              <button \n                className=\"btn btn-secondary\" \n                onClick={cancelDeleteProgram}\n              >\n                Anulează\n              </button>\n              <button \n                className=\"btn btn-primary\" \n                onClick={confirmDeleteProgram}\n              >\n                Elimină\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SavedProgramsTab;\n"],"names":["_ref","userData","navigate","useNavigate","savedPrograms","setSavedPrograms","useState","loading","setLoading","error","setError","showDeleteConfirmation","setShowDeleteConfirmation","programToDelete","setProgramToDelete","useEffect","fetchSavedPrograms","async","_response$data","response","axios","get","API_BASE_URL","headers","getAuthHeaders","console","log","data","_error$response","status","handleApiError","message","_jsx","className","children","_jsxs","length","map","program","_program$university","name","onClick","programId","handleRemoveSavedProgram","id","university","faculty","degree_type","degree","credits","language","duration","tuition_fees","cancelDeleteProgram","delete","success","prev","filter","p","setNotification","type"],"sourceRoot":""}