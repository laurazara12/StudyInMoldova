{"version":3,"file":"static/js/779.6e3a99db.chunk.js","mappings":"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","sources":["views/profile/profile-tabs/application-tab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './application-tab.css';\nimport { API_BASE_URL, getAuthHeaders } from '../../../config/api.config';\n\n// Inițializăm Stripe cu cheia publică\nconst STRIPE_PUBLISHABLE_KEY = 'pk_test_51RSwngQong6azP1PUEIUaovsL9cTrVVPP3IKyXKzRNvyHY9RNeRJ9o76VHojiog3DUkQtTJDqSz1w1IU0s1U0nld006H4Fqufo';\nconst stripePromise = loadStripe(STRIPE_PUBLISHABLE_KEY);\n\n// Componenta pentru formularul de plată\nconst PaymentForm = ({ onPaymentSuccess, onPaymentError }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [stripeError, setStripeError] = useState(null);\n\n  useEffect(() => {\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const handleOnline = () => {\n      setIsOnline(true);\n      setError(null);\n    };\n    const handleOffline = () => {\n      setIsOnline(false);\n      setError('No internet connection. Please check your connection and try again.');\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [stripe, elements]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (!isOnline) {\n      setError('No internet connection. Please check your connection and try again.');\n      return;\n    }\n\n    if (!STRIPE_PUBLISHABLE_KEY) {\n      setError('Stripe key is not configured. Please contact the administrator.');\n      return;\n    }\n\n    setProcessing(true);\n    setError(null);\n    setStripeError(null);\n\n    if (!stripe || !elements) {\n      setError('Stripe is not initialized correctly. Please refresh the page.');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const { error: submitError, paymentIntent } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: `${window.location.origin}/payment-success`,\n        },\n        redirect: 'if_required'\n      });\n\n      if (submitError) {\n        console.error('Stripe Error:', submitError);\n        setStripeError(submitError.message);\n        setError('An error occurred while processing the payment. Please try again.');\n        onPaymentError(submitError.message);\n      } else if (paymentIntent && paymentIntent.status === 'succeeded') {\n        onPaymentSuccess(paymentIntent.id);\n      } else {\n        setError('Payment could not be processed. Please try again.');\n        onPaymentError('Payment could not be processed.');\n      }\n    } catch (err) {\n      console.error('Payment processing error:', err);\n      if (!navigator.onLine) {\n        setError('Internet connection was interrupted. Please check your connection and try again.');\n      } else {\n        setError('An error occurred while processing the payment. Please check your internet connection and try again.');\n      }\n      onPaymentError('An error occurred while processing the payment.');\n    }\n\n    setProcessing(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"payment-form\">\n      <div className=\"form-group\">\n        <PaymentElement options={{\n          layout: {\n            type: 'tabs',\n            defaultCollapsed: false\n          }\n        }} />\n      </div>\n      {error && (\n        <div className=\"error-message\">\n          <i className=\"fas fa-exclamation-circle\"></i>\n          {error}\n          {!isOnline && (\n            <p className=\"error-help\">\n              Please check your internet connection and try again.\n            </p>\n          )}\n          {stripeError && (\n            <p className=\"error-details\">\n              Details: {stripeError}\n            </p>\n          )}\n        </div>\n      )}\n      <button\n        type=\"submit\"\n        disabled={!stripe || processing || !isOnline}\n        className={`btn-submit ${!isOnline ? 'btn-disabled' : ''}`}\n      >\n        {processing ? 'Processing...' : !isOnline ? 'No Connection' : 'Pay'}\n      </button>\n    </form>\n  );\n};\n\nconst ApplicationTab = () => {\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [selectedApplication, setSelectedApplication] = useState({\n    id: null,\n    program_id: '',\n    motivation_letter: '',\n    documents: [],\n    document_ids: [],\n    status: 'draft',\n    payment_status: 'unpaid',\n    errors: {\n      program: '',\n      documents: '',\n      motivation_letter: ''\n    }\n  });\n  const [showApplicationDetails, setShowApplicationDetails] = useState(false);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [programs, setPrograms] = useState([]);\n  const [userRole, setUserRole] = useState(null);\n  const [userDocuments, setUserDocuments] = useState([]);\n  const [newApplication, setNewApplication] = useState({\n    program_id: '',\n    motivation_letter: '',\n    selectedDocuments: [],\n    errors: {\n      program: '',\n      documents: '',\n      motivation_letter: ''\n    }\n  });\n  const [savedPrograms, setSavedPrograms] = useState([]);\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\n  const [paymentCompleted, setPaymentCompleted] = useState(false);\n  const [clientSecret, setClientSecret] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n\n  // Adăugăm useEffect pentru monitorizare\n  useEffect(() => {\n    console.log('selectedApplication actualizat:', selectedApplication);\n  }, [selectedApplication]);\n\n  // Efect pentru verificarea rolului utilizatorului\n  useEffect(() => {\n    const checkRole = async () => {\n      if (userRole) return; // Nu verificăm din nou dacă avem deja rolul\n      try {\n        const role = await checkUserRole();\n        setUserRole(role);\n      } catch (error) {\n        console.error('Eroare la verificarea rolului:', error);\n        setError('Nu s-a putut verifica rolul utilizatorului');\n      }\n    };\n    checkRole();\n  }, [userRole]);\n\n  // Efect pentru încărcarea inițială a datelor\n  useEffect(() => {\n    let isMounted = true;\n\n    const loadInitialData = async () => {\n      if (isLoadingData || isInitialized) return;\n      \n      try {\n        setIsLoadingData(true);\n        setLoading(true);\n        setError(null);\n\n        // Încărcăm datele în paralel\n        const [applicationsResponse, programsResponse, documentsResponse] = await Promise.all([\n          axios.get(`${API_BASE_URL}/api/applications`, {\n            headers: getAuthHeaders()\n          }),\n          axios.get(`${API_BASE_URL}/api/programs`, {\n            headers: getAuthHeaders()\n          }),\n          axios.get(`${API_BASE_URL}/api/documents/user-documents`, {\n            headers: getAuthHeaders()\n          })\n        ]);\n\n        if (!isMounted) return;\n\n        if (applicationsResponse.data.success) {\n          const applicationsData = applicationsResponse.data.data;\n          console.log('Aplicații încărcate:', applicationsData);\n          setApplications(applicationsData);\n        }\n\n        if (programsResponse.data.success) {\n          const programsData = programsResponse.data.data;\n          console.log('Programe încărcate:', programsData);\n          setPrograms(programsData);\n        }\n\n        if (documentsResponse.data.success) {\n          const documentsData = documentsResponse.data.data;\n          console.log('Documente încărcate:', documentsData);\n          setUserDocuments(documentsData);\n        }\n\n        const savedProgramsData = await loadSavedPrograms();\n        if (savedProgramsData && isMounted) {\n          console.log('Programe salvate încărcate:', savedProgramsData);\n          setSavedPrograms(savedProgramsData);\n        }\n        \n        if (isMounted) {\n          setIsInitialized(true);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n        if (isMounted) {\n          if (!navigator.onLine) {\n            setError('Nu există conexiune la internet. Vă rugăm să verificați conexiunea și să încercați din nou.');\n          } else {\n            setError('A apărut o eroare la încărcarea datelor. Vă rugăm să încercați din nou.');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n          setIsLoadingData(false);\n        }\n      }\n    };\n\n    loadInitialData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Eliminăm dependențele pentru a preveni reîncărcarea\n\n  // Efect pentru verificarea plății\n  useEffect(() => {\n    const checkPayment = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const sessionId = urlParams.get('session_id');\n      \n      if (!sessionId || loading) return;\n\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_BASE_URL}/api/payments/check-payment-status/${sessionId}`, {\n          headers: getAuthHeaders()\n        });\n        \n        if (response.data.success && response.data.status === 'paid') {\n          const pendingApplication = JSON.parse(localStorage.getItem('pendingApplication'));\n          \n          if (pendingApplication) {\n            const createResponse = await axios.post(\n              `${API_BASE_URL}/api/applications`,\n              {\n                ...pendingApplication,\n                payment_status: 'paid',\n                status: 'submitted'\n              },\n              {\n                headers: getAuthHeaders()\n              }\n            );\n\n            if (createResponse.data.success) {\n              setSuccessMessage('Plata a fost procesată cu succes și aplicația a fost trimisă!');\n              localStorage.removeItem('pendingApplication');\n              localStorage.removeItem('currentPaymentSession');\n              const newUrl = window.location.pathname;\n              window.history.replaceState({}, document.title, newUrl);\n              \n              const updatedApplications = await axios.get(`${API_BASE_URL}/api/applications`, {\n                headers: getAuthHeaders()\n              });\n              \n              if (updatedApplications.data.success) {\n                setApplications(updatedApplications.data.data);\n              }\n            } else {\n              throw new Error('Nu s-a putut crea aplicația');\n            }\n          }\n        } else {\n          setError(response.data.message || 'Plata nu a fost procesată cu succes. Aplicația rămâne în draft.');\n          const newUrl = window.location.pathname;\n          window.history.replaceState({}, document.title, newUrl);\n        }\n      } catch (error) {\n        console.error('Payment check error:', error);\n        const errorMessage = error.response?.data?.message || 'A apărut o eroare la verificarea plății. Aplicația rămâne în draft.';\n        setError(errorMessage);\n        \n        const newUrl = window.location.pathname;\n        window.history.replaceState({}, document.title, newUrl);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkPayment();\n  }, []); // Rulează doar o dată la montare\n\n  // Funcție pentru reîncărcarea datelor\n  const reloadData = async () => {\n    try {\n      setLoading(true);\n      const [applicationsResponse, documentsResponse] = await Promise.all([\n        axios.get(`${API_BASE_URL}/api/applications`, {\n          headers: getAuthHeaders()\n        }),\n        axios.get(`${API_BASE_URL}/api/documents/user-documents`, {\n          headers: getAuthHeaders()\n        })\n      ]);\n\n      if (applicationsResponse.data.success) {\n        setApplications(applicationsResponse.data.data);\n      }\n\n      if (documentsResponse.data.success) {\n        setUserDocuments(documentsResponse.data.data);\n      }\n    } catch (error) {\n      console.error('Error reloading data:', error);\n      setError('A apărut o eroare la reîncărcarea datelor');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkUserRole = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/user/role`, {\n        headers: getAuthHeaders()\n      });\n      // Convertim rolul 'student' în 'user'\n      const role = response.data.role === 'admin' ? 'admin' : 'user';\n      setUserRole(role);\n      return role;\n    } catch (error) {\n      console.error('Error checking role:', error);\n      const defaultRole = 'user';\n      setUserRole(defaultRole);\n      return defaultRole;\n    }\n  };\n\n  const loadSavedPrograms = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/saved-programs`, {\n        headers: getAuthHeaders()\n      });\n      return response.data.success ? response.data.data : [];\n    } catch (error) {\n      console.error('Error loading saved programs:', error);\n      return [];\n    }\n  };\n\n  const validateApplication = () => {\n    const errors = {\n      program: '',\n      documents: '',\n      motivation_letter: ''\n    };\n    let isValid = true;\n\n    if (!newApplication.program_id) {\n      errors.program = 'Please select a program';\n      isValid = false;\n    }\n\n    if (newApplication.selectedDocuments.length === 0) {\n      errors.documents = 'Please select at least one document';\n      isValid = false;\n    }\n\n    if (!newApplication.motivation_letter.trim()) {\n      errors.motivation_letter = 'Please write a motivation letter';\n      isValid = false;\n    }\n\n    setNewApplication(prev => ({\n      ...prev,\n      errors\n    }));\n\n    return isValid;\n  };\n\n  const createPaymentIntent = async () => {\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/payments/create-intent`,\n        {\n          amount: 1000, // Suma în bani (1000 = 10.00 RON)\n          currency: 'ron',\n          applicationId: newApplication.id\n        },\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (response.data.clientSecret) {\n        setClientSecret(response.data.clientSecret);\n        setShowPaymentForm(true);\n      } else {\n        throw new Error('No clientSecret received from server');\n      }\n    } catch (error) {\n      console.error('Error creating payment intent:', error);\n      setError('An error occurred while initializing payment.');\n    }\n  };\n\n  const handleCreateApplication = async (e) => {\n    if (e) e.preventDefault();\n    \n    if (!validateApplication()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Verificăm dacă există o aplicație plătită pentru acest program\n      const existingPaidApplication = applications.find(app => \n        app.program_id === newApplication.program_id && \n        app.payment_status === 'paid' &&\n        ['submitted', 'under_review', 'approved'].includes(app.status)\n      );\n\n      if (existingPaidApplication) {\n        setError('Aveți deja o aplicație activă pentru acest program.');\n        setLoading(false);\n        return;\n      }\n\n      // Creăm sesiunea de checkout direct, fără a crea mai întâi aplicația\n      const response = await axios.post(\n        `${API_BASE_URL}/api/payments/create-checkout-session`,\n        {\n          program_id: newApplication.program_id,\n          motivation_letter: newApplication.motivation_letter,\n          document_ids: selectedDocuments,\n          payment_status: 'unpaid',\n          status: 'draft'\n        },\n        { headers: getAuthHeaders() }\n      );\n\n      if (response.data.success && response.data.url) {\n        // Salvăm datele aplicației în localStorage\n        localStorage.setItem('pendingApplication', JSON.stringify({\n          program_id: newApplication.program_id,\n          motivation_letter: newApplication.motivation_letter,\n          document_ids: selectedDocuments,\n          payment_status: 'unpaid',\n          status: 'draft'\n        }));\n        \n        window.location.href = response.data.url;\n      } else {\n        throw new Error(response.data.message || 'Nu s-a putut crea sesiunea de checkout');\n      }\n    } catch (error) {\n      console.error('Error creating application:', error);\n      setError(error.response?.data?.message || 'A apărut o eroare la crearea aplicației. Vă rugăm să încercați din nou.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleDocumentSelection = (docId) => {\n    if (showCreateForm) {\n      setSelectedDocuments(prev => {\n        const isSelected = prev.includes(docId);\n        const newSelected = isSelected\n          ? prev.filter(id => id !== docId)\n          : [...prev, docId];\n        \n        setNewApplication(prev => ({\n          ...prev,\n          selectedDocuments: newSelected,\n          errors: {\n            ...prev.errors,\n            documents: newSelected.length === 0 ? 'Vă rugăm să selectați cel puțin un document' : ''\n          }\n        }));\n        \n        return newSelected;\n      });\n    } else {\n      setSelectedApplication(prev => {\n        const currentDocs = Array.isArray(prev.documents) ? prev.documents : [];\n        const isSelected = currentDocs.some(d => d.id === docId);\n        \n        // Găsim documentul complet din userDocuments\n        const docToToggle = userDocuments.find(d => d.id === docId);\n        if (!docToToggle) {\n          console.warn(`Documentul cu ID-ul ${docId} nu a fost găsit în userDocuments`);\n          return prev;\n        }\n        \n        const newDocs = isSelected\n          ? currentDocs.filter(d => d.id !== docId)\n          : [...currentDocs, docToToggle];\n        \n        console.log('Documente actualizate:', newDocs);\n        \n        return {\n          ...prev,\n          documents: newDocs,\n          document_ids: newDocs.map(d => d.id),\n          errors: {\n            ...prev.errors,\n            documents: newDocs.length === 0 ? 'Vă rugăm să selectați cel puțin un document' : ''\n          }\n        };\n      });\n    }\n  };\n\n  const handleViewApplication = async (application) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log('Începere vizualizare aplicație:', application);\n\n      // Verificăm dacă avem token-ul de autentificare\n      const headers = getAuthHeaders();\n      console.log('Headers pentru request:', headers);\n      \n      if (!headers.Authorization) {\n        throw new Error('Nu sunteți autentificat. Vă rugăm să vă autentificați din nou.');\n      }\n\n      // Obținem detaliile complete ale aplicației\n      console.log('Se face request pentru detaliile aplicației:', application.id);\n      const response = await axios.get(\n        `${API_BASE_URL}/api/applications/${application.id}`,\n        { headers }\n      );\n\n      console.log('Răspuns server pentru detalii aplicație:', response.data);\n\n      if (!response.data.success) {\n        throw new Error('Nu s-au putut obține detaliile aplicației');\n      }\n\n      const applicationData = response.data.data;\n      console.log('Date aplicație primite:', applicationData);\n      \n      // Procesăm documentele\n      let documents = [];\n      let documentIds = [];\n      \n      if (applicationData.document_ids) {\n        try {\n          // Verificăm dacă document_ids este un string sau un array\n          documentIds = typeof applicationData.document_ids === 'string' \n            ? JSON.parse(applicationData.document_ids)\n            : Array.isArray(applicationData.document_ids) \n              ? applicationData.document_ids \n              : [];\n          \n          console.log('ID-uri documente procesate:', documentIds);\n          \n          // Obținem detaliile complete ale documentelor din userDocuments\n          documents = documentIds.map(id => {\n            const doc = userDocuments.find(d => d.id === id);\n            if (!doc) {\n              console.warn(`Documentul cu ID-ul ${id} nu a fost găsit în lista de documente utilizator`);\n              return null;\n            }\n            return doc;\n          }).filter(doc => doc !== null);\n          \n          console.log('Documente procesate:', documents);\n        } catch (e) {\n          console.error('Eroare la parsarea document_ids:', e);\n          documents = [];\n          documentIds = [];\n        }\n      }\n\n      // Verificăm și procesăm scrisoarea de motivație\n      const motivationLetter = applicationData.motivation_letter || '';\n      if (!motivationLetter) {\n        console.warn('Scrisoarea de motivație lipsește din datele aplicației');\n      }\n\n      // Setăm starea cu toate detaliile aplicației\n      const updatedApplication = {\n        id: applicationData.id,\n        program_id: applicationData.program_id,\n        motivation_letter: motivationLetter,\n        documents: documents,\n        document_ids: documentIds,\n        status: applicationData.status || 'draft',\n        payment_status: applicationData.payment_status || 'unpaid',\n        program: applicationData.program,\n        user_id: applicationData.user_id,\n        created_at: applicationData.created_at || applicationData.createdAt,\n        updated_at: applicationData.updated_at || applicationData.updatedAt,\n        errors: {\n          program: '',\n          documents: '',\n          motivation_letter: ''\n        }\n      };\n\n      console.log('Aplicație actualizată pentru editare:', updatedApplication);\n      \n      // Verificăm dacă avem toate datele necesare\n      const missingData = [];\n      if (!updatedApplication.program_id) missingData.push('program_id');\n      if (!updatedApplication.motivation_letter) missingData.push('motivation_letter');\n      if (!updatedApplication.documents || updatedApplication.documents.length === 0) missingData.push('documents');\n      \n      if (missingData.length > 0) {\n        console.warn('Lipsesc următoarele date importante din aplicație:', missingData);\n      }\n\n      // Setăm starea aplicației\n      setSelectedApplication(updatedApplication);\n      setShowApplicationDetails(true);\n\n      // Reîncărcăm lista de documente pentru a ne asigura că avem cele mai recente date\n      try {\n        console.log('Se reîncarcă lista de documente...');\n        const documentsResponse = await axios.get(\n          `${API_BASE_URL}/api/documents/user-documents`,\n          { headers }\n        );\n        \n        if (documentsResponse.data.success) {\n          console.log('Documente reîncărcate cu succes:', documentsResponse.data.data);\n          setUserDocuments(documentsResponse.data.data);\n          \n          // Actualizăm documentele aplicației cu noile date\n          if (documentIds.length > 0) {\n            const updatedDocuments = documentIds.map(id => {\n              const doc = documentsResponse.data.data.find(d => d.id === id);\n              if (!doc) {\n                console.warn(`Documentul cu ID-ul ${id} nu a fost găsit în noile date`);\n                return null;\n              }\n              return doc;\n            }).filter(doc => doc !== null);\n            \n            console.log('Documente actualizate după reîncărcare:', updatedDocuments);\n            setSelectedApplication(prev => ({\n              ...prev,\n              documents: updatedDocuments\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Eroare la reîncărcarea documentelor:', error);\n      }\n\n    } catch (error) {\n      console.error('Error loading application details:', error);\n      setError(error.response?.data?.message || error.message || 'A apărut o eroare la încărcarea detaliilor aplicației');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUpdateApplication = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log('Începere actualizare aplicație:', selectedApplication);\n\n      // Validăm datele\n      const errors = {\n        motivation_letter: '',\n        documents: ''\n      };\n      let hasErrors = false;\n\n      // Verificăm și curățăm scrisoarea de motivație\n      const motivationLetter = selectedApplication.motivation_letter?.trim() || '';\n      if (!motivationLetter) {\n        errors.motivation_letter = 'Scrisoarea de motivație este obligatorie';\n        hasErrors = true;\n      }\n\n      // Verificăm și curățăm documentele\n      const documents = Array.isArray(selectedApplication.documents) ? selectedApplication.documents : [];\n      if (documents.length === 0) {\n        errors.documents = 'Vă rugăm să selectați cel puțin un document';\n        hasErrors = true;\n      }\n\n      if (hasErrors) {\n        console.log('Erori de validare găsite:', errors);\n        setSelectedApplication(prev => ({\n          ...prev,\n          errors\n        }));\n        setLoading(false);\n        return;\n      }\n\n      // Pregătim datele pentru actualizare\n      const updateData = {\n        motivation_letter: motivationLetter,\n        document_ids: documents.map(d => d.id),\n        status: selectedApplication.status || 'draft',\n        payment_status: selectedApplication.payment_status || 'unpaid',\n        program_id: selectedApplication.program_id,\n        user_id: selectedApplication.user_id\n      };\n\n      console.log('Date pentru actualizare:', updateData);\n\n      // Verificăm dacă avem toate datele necesare\n      if (!updateData.motivation_letter || !updateData.document_ids.length || !updateData.program_id) {\n        console.error('Date incomplete pentru actualizare:', updateData);\n        setError('Toate câmpurile sunt obligatorii. Vă rugăm să completați toate câmpurile.');\n        setLoading(false);\n        return;\n      }\n\n      // Actualizăm aplicația\n      const updateResponse = await axios.patch(\n        `${API_BASE_URL}/api/applications/${selectedApplication.id}`,\n        updateData,\n        { \n          headers: {\n            ...getAuthHeaders(),\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Răspuns server la actualizare:', updateResponse.data);\n\n      if (!updateResponse.data.success) {\n        throw new Error(updateResponse.data.message || 'Eroare la actualizarea aplicației');\n      }\n\n      // Verificăm dacă aplicația a fost actualizată corect\n      const checkResponse = await axios.get(\n        `${API_BASE_URL}/api/applications/${selectedApplication.id}`,\n        { headers: getAuthHeaders() }\n      );\n\n      if (!checkResponse.data.success) {\n        throw new Error('Nu s-au putut verifica detaliile aplicației actualizate');\n      }\n\n      const updatedApplication = checkResponse.data.data;\n      console.log('Aplicație verificată după actualizare:', updatedApplication);\n\n      // Reîncărcăm lista de aplicații\n      console.log('Se reîncarcă lista de aplicații...');\n      const updatedApplications = await axios.get(`${API_BASE_URL}/api/applications`, {\n        headers: getAuthHeaders()\n      });\n      \n      if (updatedApplications.data.success) {\n        console.log('Lista de aplicații reîncărcată cu succes:', updatedApplications.data.data);\n        setApplications(updatedApplications.data.data);\n        setSuccessMessage('Aplicația a fost actualizată cu succes!');\n        setShowApplicationDetails(false);\n        setSelectedApplication({\n          id: null,\n          program_id: '',\n          motivation_letter: '',\n          documents: [],\n          document_ids: [],\n          status: 'draft',\n          payment_status: 'unpaid',\n          errors: {\n            program: '',\n            documents: '',\n            motivation_letter: ''\n          }\n        });\n      } else {\n        throw new Error('Nu s-au putut încărca aplicațiile actualizate');\n      }\n    } catch (error) {\n      console.error('Error updating application:', error);\n      setError(error.response?.data?.message || error.message || 'A apărut o eroare la actualizarea aplicației');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return '-';\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return '-';\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return '-';\n    }\n  };\n\n  const getStatusLabel = (status) => {\n    if (!status) return 'Unknown';\n\n    switch (status) {\n      case 'draft':\n        return 'Draft';\n      case 'submitted':\n        return 'Submitted';\n      case 'under_review':\n        return 'Under Review';\n      case 'approved':\n        return 'Approved';\n      case 'rejected':\n        return 'Rejected';\n      case 'withdrawn':\n        return 'Withdrawn';\n      default:\n        return status.charAt(0).toUpperCase() + status.slice(1);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    if (!status) return 'status-unknown';\n\n    switch (status) {\n      case 'draft':\n        return 'status-draft';\n      case 'submitted':\n        return 'status-submitted';\n      case 'under_review':\n        return 'status-under-review';\n      case 'approved':\n        return 'status-approved';\n      case 'rejected':\n        return 'status-rejected';\n      case 'withdrawn':\n        return 'status-withdrawn';\n      default:\n        return 'status-unknown';\n    }\n  };\n\n  const canDeleteApplication = (application) => {\n    // Adminii pot șterge orice aplicație\n    if (userRole === 'admin') return true;\n    \n    // Utilizatorii pot șterge doar aplicațiile în draft sau cele care nu au fost plătite\n    return application.status === 'draft' || application.payment_status !== 'paid';\n  };\n\n  const handleDeleteApplication = async (applicationId) => {\n    const application = applications.find(app => app.id === applicationId);\n    \n    if (!canDeleteApplication(application)) {\n      setError('You cannot delete this application because it has already been submitted and paid.');\n      return;\n    }\n\n    if (!window.confirm('Are you sure you want to delete this application?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await axios.delete(\n        `${API_BASE_URL}/api/applications/${applicationId}`,\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (response.data.success) {\n        setSuccessMessage('Application deleted successfully!');\n        setShowApplicationDetails(false);\n        setSelectedApplication({\n          id: null,\n          program_id: '',\n          motivation_letter: '',\n          documents: [],\n          document_ids: [],\n          status: 'draft',\n          payment_status: 'unpaid',\n          errors: {\n            program: '',\n            documents: '',\n            motivation_letter: ''\n          }\n        });\n        await reloadData(); // Folosim reloadData în loc de initializeData\n      } else {\n        throw new Error(response.data.message || 'Error deleting application');\n      }\n    } catch (error) {\n      console.error('Error deleting application:', error);\n      setError(error.response?.data?.message || 'An error occurred while deleting application');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const canWithdrawApplication = (application) => {\n    // Doar utilizatorul poate retrage propria aplicație\n    if (userRole === 'admin') return false;\n    \n    // Poate fi retrasă doar dacă este în una din stările: submitted, under_review\n    return ['submitted', 'under_review'].includes(application.status);\n  };\n\n  const handleWithdrawApplication = async (applicationId) => {\n    if (!window.confirm('Are you sure you want to withdraw this application?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/applications/${applicationId}/status`,\n        {\n          status: 'withdrawn',\n          notes: 'Application withdrawn by user'\n        },\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (response.data.success) {\n        setSuccessMessage('Application withdrawn successfully!');\n        setShowApplicationDetails(false);\n        setSelectedApplication({\n          id: null,\n          program_id: '',\n          motivation_letter: '',\n          documents: [],\n          document_ids: [],\n          status: 'draft',\n          payment_status: 'unpaid',\n          errors: {\n            program: '',\n            documents: '',\n            motivation_letter: ''\n          }\n        });\n        await reloadData(); // Folosim reloadData în loc de loadUserApplications\n      } else {\n        throw new Error(response.data.message || 'Error withdrawing application');\n      }\n    } catch (error) {\n      console.error('Error withdrawing application:', error);\n      setError(error.response?.data?.message || 'An error occurred while withdrawing application');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePaymentSuccess = async (paymentMethodId) => {\n    try {\n      // Verificăm direct statusul plății\n      const response = await axios.post(\n        `${API_BASE_URL}/api/payments/verify`,\n        {\n          paymentMethodId,\n          applicationId: newApplication.id\n        },\n        {\n          headers: getAuthHeaders()\n        }\n      );\n\n      if (response.data.success) {\n        setPaymentCompleted(true);\n        setShowPaymentForm(false);\n        setSuccessMessage('Payment processed successfully!');\n        // Continuăm cu trimiterea aplicației\n        await handleCreateApplication();\n      } else {\n        throw new Error(response.data.message || 'Error verifying payment');\n      }\n    } catch (error) {\n      console.error('Error verifying payment:', error);\n      setError('An error occurred while verifying payment. Please contact support.');\n    }\n  };\n\n  const handlePaymentError = (errorMessage) => {\n    setError(errorMessage);\n  };\n\n  const handleCheckout = async (applicationId) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Obținem detaliile complete ale aplicației\n      const applicationResponse = await axios.get(\n        `${API_BASE_URL}/api/applications/${applicationId}`,\n        { headers: getAuthHeaders() }\n      );\n\n      if (!applicationResponse.data.success) {\n        throw new Error('Nu s-a putut obține detaliile aplicației');\n      }\n\n      const application = applicationResponse.data.data;\n      console.log('Detaliile aplicației pentru plată:', application);\n\n      // Verificăm dacă avem program_id\n      if (!application.program_id) {\n        throw new Error('Programul nu a fost selectat. Vă rugăm să selectați un program.');\n      }\n\n      // Verificăm dacă avem documente selectate\n      let documentIds = [];\n      if (application.document_ids) {\n        try {\n          documentIds = typeof application.document_ids === 'string' \n            ? JSON.parse(application.document_ids)\n            : application.document_ids;\n        } catch (e) {\n          console.error('Eroare la parsarea document_ids:', e);\n          documentIds = application.document_ids;\n        }\n      }\n\n      if (!documentIds || documentIds.length === 0) {\n        throw new Error('Nu ați selectat niciun document. Vă rugăm să selectați cel puțin un document.');\n      }\n\n      // Verificăm dacă avem scrisoarea de motivație\n      if (!application.motivation_letter) {\n        throw new Error('Scrisoarea de motivație lipsește. Vă rugăm să completați scrisoarea de motivație înainte de a plăti.');\n      }\n\n      // Pregătim datele pentru plată\n      const paymentData = {\n        applicationId,\n        program_id: application.program_id,\n        motivation_letter: application.motivation_letter,\n        document_ids: documentIds,\n        payment_status: 'unpaid',\n        status: 'draft',\n        user_id: application.user_id,\n        created_at: application.created_at,\n        updated_at: application.updated_at\n      };\n\n      // Salvăm datele aplicației în localStorage pentru a le putea folosi după plată\n      localStorage.setItem('pendingApplication', JSON.stringify(paymentData));\n\n      // Creăm sesiunea de checkout\n      const response = await axios.post(\n        `${API_BASE_URL}/api/payments/create-checkout-session`,\n        paymentData,\n        { headers: getAuthHeaders() }\n      );\n\n      if (response.data.success && response.data.url) {\n        console.log('Sesiune de plată creată:', response.data.session_id);\n        \n        // Salvăm ID-ul sesiunii în localStorage\n        localStorage.setItem('currentPaymentSession', response.data.session_id);\n        \n        // Redirecționăm către pagina de checkout Stripe\n        window.location.href = response.data.url;\n      } else {\n        throw new Error('Nu s-a putut crea sesiunea de plată');\n      }\n    } catch (error) {\n      console.error('Eroare la inițializarea plății:', error);\n      setError(error.response?.data?.message || error.message || 'A apărut o eroare la procesarea plății. Vă rugăm să încercați din nou.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetCreateForm = () => {\n    setNewApplication({\n      program_id: '',\n      motivation_letter: '',\n      selectedDocuments: [],\n      errors: {\n        program: '',\n        documents: '',\n        motivation_letter: ''\n      }\n    });\n    setSelectedDocuments([]);\n    setShowCreateForm(false);\n  };\n\n  const renderApplicationActions = (application) => {\n    const canEdit = application.status === 'draft';\n    const canPay = application.status === 'draft' && application.payment_status !== 'paid';\n    const canWithdraw = ['submitted', 'under_review'].includes(application.status) && canWithdrawApplication(application);\n\n    return (\n      <div className=\"application-actions\">\n        {canEdit && (\n          <>\n            <button\n              className=\"btn btn-grey\"\n              onClick={() => handleViewApplication(application)}\n            >\n              Edit\n            </button>\n            {canDeleteApplication(application) && (\n              <button\n                className=\"btn btn-delete\"\n                onClick={() => handleDeleteApplication(application.id)}\n              >\n                Delete\n              </button>\n            )}\n          </>\n        )}\n        {canPay && (\n          <button\n            className=\"btn btn-success\"\n            onClick={() => handleCheckout(application.id)}\n          >\n            Pay Application Fee\n          </button>\n        )}\n        {canWithdraw && (\n          <button\n            className=\"btn1\"\n            onClick={() => handleWithdrawApplication(application.id)}\n          >\n            Withdraw Application\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"application-tab\">\n      <div className=\"application-section\">\n        <h2>{userRole === 'admin' ? 'All Applications' : 'My Applications'}</h2>\n        {userRole !== 'admin' && (\n          <button \n            className=\"btn1\"\n            onClick={() => setShowCreateForm(true)}\n            disabled={loading}\n          >\n            <i className=\"fas fa-plus\"></i> Create New Application\n          </button>\n        )}\n      </div>\n\n      {successMessage && (\n        <div className=\"alert-success\">\n          {successMessage}\n        </div>\n      )}\n\n      {error && (\n        <div className=\"alert-error\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"application-stats\">\n        <div className=\"application-stat\">\n          Drafts\n          <span className=\"stat-value status-draft\">{applications.filter(app => app.status === 'draft').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Submitted\n          <span className=\"stat-value status-submitted\">{applications.filter(app => app.status === 'submitted').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Under Review\n          <span className=\"stat-value status-under-review\">{applications.filter(app => app.status === 'under_review').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Approved\n          <span className=\"stat-value status-approved\">{applications.filter(app => app.status === 'approved').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Rejected\n          <span className=\"stat-value status-rejected\">{applications.filter(app => app.status === 'rejected').length}</span>\n        </div>\n        <div className=\"application-stat\">\n          Withdrawn\n          <span className=\"stat-value status-withdrawn\">{applications.filter(app => app.status === 'withdrawn').length}</span>\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading applications...</p>\n        </div>\n      ) : applications.length === 0 ? (\n        <div className=\"no-applications\">\n          <p>No applications found.</p>\n        </div>\n      ) : (\n        <div className=\"applications-table-container\">\n          <table className=\"profile-table\">\n            <thead>\n              <tr>\n                {userRole === 'admin' && <th>User</th>}\n                <th>Program</th>\n                <th>University</th>\n                <th>Application Date</th>\n                <th>Status</th>\n                <th>Payment</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {applications.map(app => (\n                <tr key={app.id}>\n                  {userRole === 'admin' && (\n                    <td>{app.user_name || `User ID: ${app.user_id}`}</td>\n                  )}\n                  <td>{app.program?.name || 'N/A'}</td>\n                  <td>{app.program?.university?.name || 'N/A'}</td>\n                  <td>{formatDate(app.created_at || app.updated_at || app.submitted_at)}</td>\n                  <td>\n                    <span className={`status-badge ${getStatusColor(app.status)}`}>\n                      {getStatusLabel(app.status)}\n                    </span>\n                  </td>\n                  <td>\n                    <span className={`payment-status ${app.payment_status === 'paid' ? 'paid' : 'unpaid'}`}>\n                      {app.payment_status === 'paid' ? 'Paid' : 'Unpaid'}\n                    </span>\n                  </td>\n                  <td>\n                    <div className=\"application-actions\">\n                      {app.status === 'draft' && (\n                        <>\n                          <button\n                            className=\"btn btn-grey\"\n                            onClick={() => handleViewApplication(app)}\n                          >\n                            Edit\n                          </button>\n                          {canDeleteApplication(app) && (\n                            <button\n                              className=\"btn btn-delete\"\n                              onClick={() => handleDeleteApplication(app.id)}\n                            >\n                              Delete\n                            </button>\n                          )}\n                        </>\n                      )}\n                      {app.status === 'draft' && app.payment_status !== 'paid' && (\n                        <button\n                          className=\"btn btn-success\"\n                          onClick={() => handleCheckout(app.id)}\n                        >\n                          Pay Application Fee\n                        </button>\n                      )}\n                      {['submitted', 'under_review'].includes(app.status) && canWithdrawApplication(app) && (\n                        <button\n                          className=\"btn1\"\n                          onClick={() => handleWithdrawApplication(app.id)}\n                        >\n                          Withdraw Application\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {showCreateForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Create New Application</h2>\n            {showPaymentForm && clientSecret ? (\n              <Elements stripe={stripePromise} options={{ clientSecret }}>\n                <PaymentForm\n                  onPaymentSuccess={handlePaymentSuccess}\n                  onPaymentError={handlePaymentError}\n                />\n              </Elements>\n            ) : (\n              <form onSubmit={handleCreateApplication} className=\"application-form\">\n                <div className=\"form-group\">\n                  <label>Program: <span className=\"required\">*</span></label>\n                  <select\n                    value={newApplication.program_id}\n                    onChange={(e) => setNewApplication({\n                      ...newApplication,\n                      program_id: e.target.value,\n                      errors: {\n                        ...newApplication.errors,\n                        program: ''\n                      }\n                    })}\n                    className={`form-select ${newApplication.errors.program ? 'error' : ''}`}\n                  >\n                    <option value=\"\">Select a program</option>\n                    {savedPrograms.length > 0 ? (\n                      savedPrograms.map(program => (\n                        <option key={program.id} value={program.id}>\n                          {program.name} - {program.university?.name}\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\" disabled>No saved programs</option>\n                    )}\n                  </select>\n                  {newApplication.errors.program && (\n                    <span className=\"error-message\">{newApplication.errors.program}</span>\n                  )}\n                  {savedPrograms.length === 0 && (\n                    <p className=\"info-message\">\n                      To create an application, you need to save a program from the programs list first.\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Motivation Letter: <span className=\"required\">*</span></label>\n                  <textarea\n                    value={newApplication.motivation_letter}\n                    onChange={(e) => setNewApplication({\n                      ...newApplication,\n                      motivation_letter: e.target.value,\n                      errors: {\n                        ...newApplication.errors,\n                        motivation_letter: ''\n                      }\n                    })}\n                    className={`form-textarea ${newApplication.errors.motivation_letter ? 'error' : ''}`}\n                    rows=\"6\"\n                    placeholder=\"Write your motivation letter...\"\n                  />\n                  {newApplication.errors.motivation_letter && (\n                    <span className=\"error-message\">{newApplication.errors.motivation_letter}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Required Documents: <span className=\"required\">*</span></label>\n                  <div className=\"documents-selection\">\n                    {!userDocuments || userDocuments.length === 0 ? (\n                      <p className=\"no-documents\">You don't have any uploaded documents. Please upload your documents in the profile section.</p>\n                    ) : (\n                      <div className=\"documents-list\">\n                        {userDocuments.map((doc, index) => (\n                          <div key={`doc-${doc.id}-${index}`} className=\"document-item\">\n                            <label className=\"document-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={newApplication.selectedDocuments.includes(doc.id)}\n                                onChange={() => toggleDocumentSelection(doc.id)}\n                              />\n                              <span className=\"document-name\">{doc.name || doc.document_type}</span>\n                            </label>\n                            {doc.url && (\n                              <a \n                                href={doc.url} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"document-preview\"\n                              >\n                                <i className=\"fas fa-eye\"></i> View\n                              </a>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                    {newApplication.errors.documents && (\n                      <span className=\"error-message\">{newApplication.errors.documents}</span>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"form-info\">\n                  <p><span className=\"required\">*</span> Required fields</p>\n                  <div className=\"payment-info\">\n                    <i className=\"fas fa-info-circle\"></i>\n                    <p>To submit your application, you need to pay a one-time application fee of 30 EUR. Payment will be processed after completing the form.</p>\n                  </div>\n                </div>\n\n                <div className=\"button-group\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Continue to Payment\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-grey-2\"\n                    onClick={() => {\n                      setShowCreateForm(false);\n                      resetCreateForm();\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      )}\n\n      {showApplicationDetails && selectedApplication && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Detalii Aplicație</h2>\n            <div className=\"application-details\">\n              {userRole === 'admin' && (\n                <p><strong>Utilizator:</strong> {selectedApplication.user_name || `ID: ${selectedApplication.user_id}`}</p>\n              )}\n              <p><strong>Program:</strong> {selectedApplication.program?.name || 'N/A'}</p>\n              <p><strong>Universitate:</strong> {selectedApplication.program?.university?.name || 'N/A'}</p>\n              <p><strong>Data aplicării:</strong> {formatDate(selectedApplication.created_at)}</p>\n              <p><strong>Status:</strong> {getStatusLabel(selectedApplication.status)}</p>\n              <p><strong>Status plată:</strong> {selectedApplication.payment_status === 'paid' ? 'Plătit' : 'Neplătit'}</p>\n              \n              <div className=\"form-group\">\n                <label><strong>Scrisoare de motivație:</strong></label>\n                <textarea\n                  value={selectedApplication.motivation_letter || ''}\n                  onChange={(e) => setSelectedApplication(prev => ({\n                    ...prev,\n                    motivation_letter: e.target.value,\n                    errors: {\n                      ...prev.errors,\n                      motivation_letter: ''\n                    }\n                  }))}\n                  className={`form-textarea ${selectedApplication.errors?.motivation_letter ? 'error' : ''}`}\n                  rows=\"6\"\n                  placeholder=\"Scrieți scrisoarea de motivație...\"\n                  disabled={selectedApplication.status !== 'draft'}\n                />\n                {selectedApplication.errors?.motivation_letter && (\n                  <span className=\"error-message\">{selectedApplication.errors.motivation_letter}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label><strong>Documente selectate:</strong></label>\n                <div className=\"documents-selection\">\n                  {!userDocuments || userDocuments.length === 0 ? (\n                    <p className=\"no-documents\">Nu aveți niciun document încărcat. Vă rugăm să încărcați documentele în secțiunea de profil.</p>\n                  ) : (\n                    <div className=\"documents-list\">\n                      {userDocuments.map((doc) => {\n                        const isSelected = selectedApplication.documents && \n                          selectedApplication.documents.some(d => d.id === doc.id);\n                        return (\n                          <div key={doc.id} className=\"document-item\">\n                            <label className=\"document-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={isSelected}\n                                onChange={() => toggleDocumentSelection(doc.id)}\n                                disabled={selectedApplication.status !== 'draft'}\n                              />\n                              <span className=\"document-name\">{doc.name || doc.document_type}</span>\n                            </label>\n                            {doc.url && (\n                              <a \n                                href={doc.url} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"document-preview\"\n                              >\n                                <i className=\"fas fa-eye\"></i> Vizualizare\n                              </a>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                  {selectedApplication.errors?.documents && (\n                    <span className=\"error-message\">{selectedApplication.errors.documents}</span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"action-buttons\">\n                {selectedApplication.status === 'draft' && (\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={handleUpdateApplication}\n                    disabled={loading}\n                  >\n                    {loading ? 'Se salvează...' : 'Salvează modificările'}\n                  </button>\n                )}\n                \n                {canDeleteApplication(selectedApplication) && (\n                  <button\n                    className=\"btn btn-delete\"\n                    onClick={() => handleDeleteApplication(selectedApplication.id)}\n                    disabled={loading}\n                  >\n                    <i className=\"fas fa-trash\"></i> Șterge aplicația\n                  </button>\n                )}\n                \n                {canWithdrawApplication(selectedApplication) && (\n                  <button\n                    className=\"btn1\"\n                    onClick={() => handleWithdrawApplication(selectedApplication.id)}\n                    disabled={loading}\n                  >\n                    <i className=\"fas fa-undo\"></i> Retrage aplicația\n                  </button>\n                )}\n\n                <button \n                  className=\"btn btn-grey-2\"\n                  onClick={() => {\n                    setShowApplicationDetails(false);\n                    setSelectedApplication({\n                      id: null,\n                      program_id: '',\n                      motivation_letter: '',\n                      documents: [],\n                      document_ids: [],\n                      status: 'draft',\n                      payment_status: 'unpaid',\n                      errors: {\n                        program: '',\n                        documents: '',\n                        motivation_letter: ''\n                      }\n                    });\n                  }}\n                >\n                  Închide\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationTab; "],"names":["STRIPE_PUBLISHABLE_KEY","stripePromise","loadStripe","PaymentForm","_ref","onPaymentSuccess","onPaymentError","stripe","useStripe","elements","useElements","processing","setProcessing","useState","error","setError","isOnline","setIsOnline","navigator","onLine","stripeError","setStripeError","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","_jsxs","onSubmit","async","event","preventDefault","submitError","paymentIntent","confirmPayment","confirmParams","return_url","location","origin","redirect","console","message","status","id","err","className","children","_jsx","PaymentElement","options","layout","type","defaultCollapsed","disabled","ApplicationTab","_selectedApplication$2","_selectedApplication$3","_selectedApplication$4","_selectedApplication$5","_selectedApplication$6","_selectedApplication$7","applications","setApplications","loading","setLoading","successMessage","setSuccessMessage","selectedApplication","setSelectedApplication","program_id","motivation_letter","documents","document_ids","payment_status","errors","program","showApplicationDetails","setShowApplicationDetails","showCreateForm","setShowCreateForm","programs","setPrograms","userRole","setUserRole","userDocuments","setUserDocuments","newApplication","setNewApplication","selectedDocuments","savedPrograms","setSavedPrograms","showPaymentForm","setShowPaymentForm","paymentCompleted","setPaymentCompleted","clientSecret","setClientSecret","isInitialized","setIsInitialized","isLoadingData","setIsLoadingData","setSelectedDocuments","log","role","checkUserRole","checkRole","isMounted","applicationsResponse","programsResponse","documentsResponse","Promise","all","axios","get","API_BASE_URL","headers","getAuthHeaders","data","success","applicationsData","programsData","documentsData","savedProgramsData","loadSavedPrograms","loadInitialData","sessionId","URLSearchParams","search","response","pendingApplication","JSON","parse","localStorage","getItem","post","Error","removeItem","newUrl","pathname","history","replaceState","document","title","updatedApplications","_error$response","_error$response$data","errorMessage","checkPayment","reloadData","defaultRole","handleCreateApplication","e","validateApplication","isValid","length","trim","prev","find","app","includes","url","setItem","stringify","href","_error$response2","_error$response2$data","toggleDocumentSelection","docId","newSelected","filter","currentDocs","Array","isArray","isSelected","some","d","docToToggle","warn","newDocs","map","handleViewApplication","application","Authorization","applicationData","documentIds","doc","motivationLetter","updatedApplication","user_id","created_at","createdAt","updated_at","updatedAt","missingData","push","updatedDocuments","_error$response3","_error$response3$data","formatDate","dateString","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","hour","minute","getStatusLabel","charAt","toUpperCase","slice","getStatusColor","canDeleteApplication","handleDeleteApplication","applicationId","confirm","delete","_error$response5","_error$response5$data","canWithdrawApplication","handleWithdrawApplication","patch","notes","_error$response6","_error$response6$data","handleCheckout","applicationResponse","paymentData","session_id","_error$response7","_error$response7$data","onClick","_app$program","_app$program2","_app$program2$univers","user_name","name","university","submitted_at","_Fragment","Elements","paymentMethodId","value","onChange","target","_program$university","rows","placeholder","index","checked","document_type","rel","_selectedApplication$","hasErrors","updateData","updateResponse","checkResponse","_error$response4","_error$response4$data"],"sourceRoot":""}